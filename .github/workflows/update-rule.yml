name: Auto Update and Release Ad Rules

permissions:
  contents: write

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  # 自动运行时先检查更新
  check_update:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    outputs:
      updated: ${{ steps.result.outputs.updated }}
    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Check upstream update
        id: result
        run: |
          echo "Checking upstream..."
          LATEST_SHA=$(curl -s "https://api.github.com/repos/TG-Twilight/AWAvenue-Ads-Rule/commits?path=Filters/AWAvenue-Ads-Rule-Clash-Classical.yaml&sha=main" | jq -r '.[0].sha')

          mkdir -p scripts
          if [ -f scripts/.last_hash ]; then
            LAST_SHA=$(cat scripts/.last_hash)
          else
            LAST_SHA=""
          fi

          if [ "$LATEST_SHA" = "$LAST_SHA" ]; then
            echo "No updates."
            echo "updated=false" >> $GITHUB_OUTPUT
          else
            echo "$LATEST_SHA" > scripts/.last_hash
            echo "updated=true" >> $GITHUB_OUTPUT
          fi

  # 自动运行：仅当有更新才运行主流程
  auto_run:
    needs: check_update
    if: github.event_name == 'schedule' && needs.check_update.outputs.updated == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - run: pip install requests

      - run: python scripts/convert_rule.py

      - id: check_changes
        run: |
          if git diff --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - if: steps.check_changes.outputs.changed == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add AWAvenue-Ads-Rule-Clash-Classical.list scripts/.last_hash
          git commit -m "🔄 Auto update rule"
          git push

      - id: tag
        run: echo "tag=v$(TZ=Asia/Shanghai date +'%Y.%m.%d.%H%M')" >> $GITHUB_OUTPUT

      - if: steps.check_changes.outputs.changed == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Auto Release ${{ steps.tag.outputs.tag }}
          body: |
            自动同步更新源规则
            - 来源：https://github.com/TG-Twilight/AWAvenue-Ads-Rule
            - 时间戳：${{ steps.tag.outputs.tag }}
          files: AWAvenue-Ads-Rule-Clash-Classical.list
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # 手动运行：直接无条件执行
  manual_run:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - run: pip install requests

      - run: python scripts/convert_rule.py

      - id: check_changes
        run: |
          if git diff --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - if: steps.check_changes.outputs.changed == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add AWAvenue-Ads-Rule-Clash-Classical.list scripts/.last_hash
          git commit -m "🔄 Manual update rule"
          git push

      - id: tag
        run: echo "tag=v$(TZ=Asia/Shanghai date +'%Y.%m.%d.%H%M')" >> $GITHUB_OUTPUT

      - uses: softprops/action-gh-release@v2
        if: steps.check_changes.outputs.changed == 'true'
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Manual Release ${{ steps.tag.outputs.tag }}
          body: |
            手动同步更新源规则
            - 来源：https://github.com/TG-Twilight/AWAvenue-Ads-Rule
            - 时间戳：${{ steps.tag.outputs.tag }}
          files: AWAvenue-Ads-Rule-Clash-Classical.list
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}